/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.test.api;

import org.springframework.beans.factory.annotation.Autowired;

public interface DataCorruptionWatcher
{
  /**
   * Set an array of objects which, if any of them report that data are
   * corrupted, will trigger data to be reloaded between tests.
   * 
   * The SchemaDeployer doesn't reload the data, but it needs to remove
   * constraints before the data are reloaded, and restore them afterwards, so
   * it checks the reporters.
   * 
   * This is marked as autowired in the default implementation, which will cause
   * all objects in the Spring context that implement the {@Code
   * DBDataCorruptionReporter} interface to be consulted.
   * 
   * @param reporters
   */
  @Autowired (required = false)
  void setDataCorruptionReporters (DBDataCorruptionReporter[] reporters);

  public static class Tester
  {
    public static boolean isDataCorrupt (DBDataCorruptionReporter[] corruptionReporters) {
      boolean ans = false;
      if (!(corruptionReporters == null || corruptionReporters.length == 0)) {
        for (DBDataCorruptionReporter reporter_i : corruptionReporters) {
          ans = ans || reporter_i.isDataCorrupt ();
        }
      }
      return ans;
    }
  }

}
