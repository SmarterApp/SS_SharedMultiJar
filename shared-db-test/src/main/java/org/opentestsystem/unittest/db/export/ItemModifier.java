/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.unittest.db.export;
import java.io.File;  
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Scanner;

import javax.xml.parsers.DocumentBuilder;  
import javax.xml.parsers.DocumentBuilderFactory;  
import javax.xml.transform.Transformer;    
import javax.xml.transform.TransformerFactory; 
import javax.xml.transform.dom.DOMSource; 
import javax.xml.transform.stream.StreamResult; 

import org.w3c.dom.Document;  
import org.w3c.dom.Element;  
import org.w3c.dom.Node;  
import org.w3c.dom.NodeList;  
  
public class ItemModifier
{
  private final static String tblitembankHomepath = "Bank-176/";
  private final static String tblitembankItemBank = "176";
  private final static String tblitembankItempath = "Items/";
  private final static String rootPath = "C:\\Temp\\";
  private final static Charset ENCODING = StandardCharsets.UTF_8;
  private Document doc;
  
  public static void main (String... aArgs) throws Exception {
    ItemModifier itemModifier= new ItemModifier();
    itemModifier.readItemFile ();
    Path fItemListPath = Paths.get (rootPath, "itemList.txt");
    try (Scanner sc = new Scanner (fItemListPath, ENCODING.name ())) {
      while (sc.hasNext ()) {
        String itemID = sc.nextLine ();
        itemModifier.updateSomeFields(itemID);
        itemModifier.writeNewItemFile (itemID);
      }
    } catch (Exception e) {
      System.out.println ("Exception: " + e.getMessage ());
      throw e;
    }
  }
  
  private void  readItemFile() throws Exception {
   Path path =  Paths.get (rootPath, "sampleItem.xml");
   String stringPath = path.toString();
    File xmlFile = new File(stringPath);//("C:\\Temp\\sampleItem.xml");  
    DocumentBuilderFactory documentFactory = DocumentBuilderFactory.newInstance();  
    DocumentBuilder documentBuilder = documentFactory.newDocumentBuilder();  
    doc = documentBuilder.parse(xmlFile);  
   
    doc.getDocumentElement().normalize();
  }
  
  private void updateSomeFields (String itemID) {
    NodeList nodeList = doc.getElementsByTagName("item"); 
    for (int temp = 0; temp < nodeList.getLength(); temp++) {  
      Node node = nodeList.item(temp);  
    
      System.out.println("\nElement type :" + node.getNodeName());  
    
      if (node.getNodeType() == Node.ELEMENT_NODE) {  
    
       Element itemEl = (Element) node;
       if (itemEl.hasAttribute ("id"))
         itemEl.setAttribute ("id", itemID);
       if (itemEl.hasAttribute ("bankkey"))
         itemEl.setAttribute ("bankkey", tblitembankItemBank);
       //itemEl.getElementsByTagName("firstname").item(0).getTextContent()
      }
    }
  }
  
  private void writeNewItemFile (String itemID)  throws Exception{
    TransformerFactory transformerFactory = TransformerFactory  
        .newInstance();  
      Transformer transformer = transformerFactory.newTransformer();  
      DOMSource domSource = new DOMSource(doc); 
      String tblitemFilePath = new StringBuilder ("item-").append (tblitembankItemBank).append("-").append(itemID).toString ();
      
      String fileName = new StringBuilder (tblitemFilePath).append (".xml").toString();
      
      String stringPath = new StringBuilder (rootPath).append(tblitembankHomepath).append(tblitembankItempath).
          append(tblitemFilePath).append("/").append(fileName).toString();
      
      Path path = Paths.get(stringPath);
      //TODO Elena: need to add directories creation logic
      File tmp = new File(path.toString ());
      tmp.getParentFile().mkdirs();
      StreamResult streamResult = new StreamResult(tmp);  
     
      transformer.transform(domSource, streamResult); 
  }
}
