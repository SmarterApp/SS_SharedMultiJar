/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.test.interactioncontext;

import java.io.IOException;

import org.apache.commons.lang.StringUtils;

import com.gargoylesoftware.htmlunit.Page;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.html.DomElement;
import com.gargoylesoftware.htmlunit.html.HtmlElement;
import com.gargoylesoftware.htmlunit.html.HtmlInput;
import com.gargoylesoftware.htmlunit.html.HtmlPage;

public abstract class ContextUtils
{

  public static boolean hasClass (DomElement el, String styleClass) {
    if (StringUtils.isBlank (styleClass)) {
      return false;
    }
    String[] classes = StringUtils.split (el.getAttribute ("class"));
    for ( String class_i : classes ) {
      if ( styleClass.equalsIgnoreCase ( class_i )) {
        return true;
      }
    }
    return false;
  }
  
  public static void clickUntilChecked( HtmlInput input ) throws IOException {
    clickUntilValue( input, true );
  }
  
  public static void clickUntilUnchecked( HtmlInput input ) throws IOException {
    clickUntilValue( input, false);
  }
  
  public static void clickUntilValue( HtmlInput input, boolean value ) throws IOException {
    while ( value != input.isChecked () ) {
      input.click ();
      input.getPage ().getWebClient ().waitForBackgroundJavaScript (1000);
    }
  }

  public static Page clickForNewPage (HtmlElement clickable) throws IOException {
    HtmlPage lastPage = (HtmlPage) clickable.getPage();
    WebClient client = lastPage.getWebClient();
    clickable.click ();
    client.waitForBackgroundJavaScript (30000);
    return client.getCurrentWindow ().getEnclosedPage ();
  }
}
