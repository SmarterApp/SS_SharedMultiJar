/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.unittest.db.export;

import java.io.FileOutputStream;
import org.dbunit.database.DatabaseConfig;
import org.dbunit.database.DatabaseDataSourceConnection;
import org.dbunit.database.IDatabaseConnection;
import org.dbunit.database.QueryDataSet;
import org.dbunit.dataset.xml.FlatXmlDataSet;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.mchange.v2.c3p0.ComboPooledDataSource;

public class DBDataExporter {
	
	private ComboPooledDataSource childDataSource = null;
	
	public static void main(String[] args) throws Exception	{
		(new DBDataExporter()).exportSessionXml();
	}
	
	private void initializeDataSource () throws Exception {
		if (childDataSource == null) {
			childDataSource = new ComboPooledDataSource ();
			childDataSource.setUser ("dbsbac");
			childDataSource.setPassword ("osTyMhRM1C");
			childDataSource.setJdbcUrl ("jdbc:mysql://db-dev.opentestsystem.org:3306/tdscore_test_session?useServerPrepStmts=false&amp;rewriteBatchedStatements=true");
			childDataSource.setDriverClass ("com.mysql.jdbc.Driver");
		}
	}
	
	private IDatabaseConnection getDBUnitConnection() throws Exception {
		initializeDataSource();
		
		IDatabaseConnection connection = new DatabaseDataSourceConnection(childDataSource);

		//DatabaseConfig config = connection.getConfig();
	    //config.setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY, new MySqlTimestampDataTypeFactory());
		//config.setProperty(DatabaseConfig.PROPERTY_METADATA_HANDLER, new MySqlMetadataHandler());
	    
		return connection;
	}
	
	private void exportSessionXml() throws Exception {
		// database connection
		IDatabaseConnection connection = getDBUnitConnection();

		// partial database export
		QueryDataSet partialDataSet = new QueryDataSet(connection);
		partialDataSet.addTable("_anonymoustestee", "SELECT * FROM _anonymoustestee where unittestflag=1");
		partialDataSet.addTable("_externs", "SELECT * FROM _externs where unittestflag=1");
		partialDataSet.addTable("_maxtestopps", "SELECT * FROM _maxtestopps where unittestflag=1");
		partialDataSet.addTable("_missingmessages", "SELECT * FROM _missingmessages where unittestflag=1");
		partialDataSet.addTable("_sb_errorlog", "SELECT * FROM _sb_errorlog where unittestflag=1");
		partialDataSet.addTable("_sb_messagehandler", "SELECT * FROM _sb_messagehandler where unittestflag=1");
		partialDataSet.addTable("_sb_messages", "SELECT * FROM _sb_messages where unittestflag=1");
		partialDataSet.addTable("_sb_messagesarchive", "SELECT * FROM _sb_messagesarchive where unittestflag=1");
		partialDataSet.addTable("_sitelatency", "SELECT * FROM _sitelatency where unittestflag=1");
		partialDataSet.addTable("_synonyms", "SELECT * FROM _synonyms where unittestflag=1");
		partialDataSet.addTable("adminevent", "SELECT * FROM adminevent where unittestflag=1");
		partialDataSet.addTable("admineventitems", "SELECT * FROM admineventitems where unittestflag=1");
		partialDataSet.addTable("admineventopportunities", "SELECT * FROM admineventopportunities where unittestflag=1");
		partialDataSet.addTable("alertmessages", "SELECT * FROM alertmessages where unittestflag=1");
		partialDataSet.addTable("client_os", "SELECT * FROM client_os where unittestflag=1");
		partialDataSet.addTable("client_reportingid", "SELECT * FROM client_reportingid where unittestflag=1");
		partialDataSet.addTable("client_sessionid", "SELECT * FROM client_sessionid where unittestflag=1");
		partialDataSet.addTable("clientlatency", "SELECT * FROM clientlatency where unittestflag=1");
		partialDataSet.addTable("clientlatencyarchive", "SELECT * FROM clientlatencyarchive where unittestflag=1");
		partialDataSet.addTable("ft_groupsamples", "SELECT * FROM ft_groupsamples where unittestflag=1");
		partialDataSet.addTable("ft_opportunityitem", "SELECT * FROM ft_opportunityitem where unittestflag=1");
		partialDataSet.addTable("geo_clientsystem", "SELECT * FROM geo_clientsystem where unittestflag=1");
		partialDataSet.addTable("geo_session", "SELECT * FROM geo_session where unittestflag=1");
		partialDataSet.addTable("itemdistribution", "SELECT * FROM itemdistribution where unittestflag=1");
		partialDataSet.addTable("loadtest_testee", "SELECT * FROM loadtest_testee where unittestflag=1");
		partialDataSet.addTable("qc_validationexception", "SELECT * FROM qc_validationexception where unittestflag=1");
		partialDataSet.addTable("r_abnormallogins", "SELECT * FROM r_abnormallogins where unittestflag=1");
		partialDataSet.addTable("r_blueprintreport", "SELECT * FROM r_blueprintreport where unittestflag=1");
		partialDataSet.addTable("r_geolatencyreport", "SELECT * FROM r_geolatencyreport where unittestflag=1");
		partialDataSet.addTable("r_hourlygeolatencytable", "SELECT * FROM r_hourlygeolatencytable where unittestflag=1");
		partialDataSet.addTable("r_hourlyusers", "SELECT * FROM r_hourlyusers where unittestflag=1");
		partialDataSet.addTable("r_participationcountstable", "SELECT * FROM r_participationcountstable where unittestflag=1");
		partialDataSet.addTable("r_proctorpackage", "SELECT * FROM r_proctorpackage where unittestflag=1");
		partialDataSet.addTable("r_schoolparticipationreport", "SELECT * FROM r_schoolparticipationreport where unittestflag=1");
		partialDataSet.addTable("r_studentkeyid", "SELECT * FROM r_studentkeyid where unittestflag=1");
		partialDataSet.addTable("r_studentpackage", "SELECT * FROM r_studentpackage where unittestflag=1");
		partialDataSet.addTable("r_testcounts", "SELECT * FROM r_testcounts where unittestflag=1");
		partialDataSet.addTable("rtsschoolgrades", "SELECT * FROM rtsschoolgrades where unittestflag=1");
		partialDataSet.addTable("session", "SELECT * FROM session where unittestflag=1");
		partialDataSet.addTable("sessiontests", "SELECT * FROM sessiontests where unittestflag=1");
		partialDataSet.addTable("setofproctoralertmessages", "SELECT * FROM setofproctoralertmessages where unittestflag=1");
		partialDataSet.addTable("sim_itemgroup", "SELECT * FROM sim_itemgroup where unittestflag=1");
		partialDataSet.addTable("sim_segment", "SELECT * FROM sim_segment where unittestflag=1");
		partialDataSet.addTable("sim_segmentcontentlevel", "SELECT * FROM sim_segmentcontentlevel where unittestflag=1");
		partialDataSet.addTable("sim_segmentitem", "SELECT * FROM sim_segmentitem where unittestflag=1");
		partialDataSet.addTable("sim_user", "SELECT * FROM sim_user where unittestflag=1");
		partialDataSet.addTable("sim_userclient", "SELECT * FROM sim_userclient where unittestflag=1");
		partialDataSet.addTable("simp_itemgroup", "SELECT * FROM simp_itemgroup where unittestflag=1");
		partialDataSet.addTable("simp_segment", "SELECT * FROM simp_segment where unittestflag=1");
		partialDataSet.addTable("simp_segmentcontentlevel", "SELECT * FROM simp_segmentcontentlevel where unittestflag=1");
		partialDataSet.addTable("simp_segmentitem", "SELECT * FROM simp_segmentitem where unittestflag=1");
		partialDataSet.addTable("simp_session", "SELECT * FROM simp_session where unittestflag=1");
		partialDataSet.addTable("simp_sessiontests", "SELECT * FROM simp_sessiontests where unittestflag=1");
		partialDataSet.addTable("sirve_audit", "SELECT * FROM sirve_audit where unittestflag=1");
		partialDataSet.addTable("sirve_session", "SELECT * FROM sirve_session where unittestflag=1");
		partialDataSet.addTable("tblclsclientsessionstatus", "SELECT * FROM tblclsclientsessionstatus where unittestflag=1");
		partialDataSet.addTable("testeeaccommodations", "SELECT * FROM testeeaccommodations where unittestflag=1");
		partialDataSet.addTable("testeeattribute", "SELECT * FROM testeeattribute where unittestflag=1");
		partialDataSet.addTable("testeecomment", "SELECT * FROM testeecomment where unittestflag=1");
		partialDataSet.addTable("testeehistory", "SELECT * FROM testeehistory where unittestflag=1");
		partialDataSet.addTable("testeeitemhistory", "SELECT * FROM testeeitemhistory where unittestflag=1");
		partialDataSet.addTable("testeerelationship", "SELECT * FROM testeerelationship where unittestflag=1");
		partialDataSet.addTable("testeeresponse", "SELECT * FROM testeeresponse where unittestflag=1");
		partialDataSet.addTable("testeeresponsearchive", "SELECT * FROM testeeresponsearchive where unittestflag=1");
		partialDataSet.addTable("testeeresponseaudit", "SELECT * FROM testeeresponseaudit where unittestflag=1");
		partialDataSet.addTable("testeeresponsescore", "SELECT * FROM testeeresponsescore where unittestflag=1");
		partialDataSet.addTable("testoppabilityestimate", "SELECT * FROM testoppabilityestimate where unittestflag=1");
		partialDataSet.addTable("testopportunity", "SELECT * FROM testopportunity where unittestflag=1");
		partialDataSet.addTable("testopportunity_readonly", "SELECT * FROM testopportunity_readonly where unittestflag=1");
		partialDataSet.addTable("testopportunitycontentcounts", "SELECT * FROM testopportunitycontentcounts where unittestflag=1");
		partialDataSet.addTable("testopportunityscores", "SELECT * FROM testopportunityscores where unittestflag=1");
		partialDataSet.addTable("testopportunitysegment", "SELECT * FROM testopportunitysegment where unittestflag=1");
		partialDataSet.addTable("testopportunitysegmentcounts", "SELECT * FROM testopportunitysegmentcounts where unittestflag=1");
		partialDataSet.addTable("testopprequest", "SELECT * FROM testopprequest where unittestflag=1");
		partialDataSet.addTable("testopptoolsused", "SELECT * FROM testopptoolsused where unittestflag=1");
		
		String xmlFile = this.getClass().getResource ("/export/session/exportedXmlDataSet.xml").getPath ();
		FlatXmlDataSet.write(partialDataSet, new FileOutputStream(xmlFile));
	}
	
	private void exportConfigsXml() throws Exception {
		// database connection
		IDatabaseConnection connection = getDBUnitConnection();

		// partial database export
		QueryDataSet partialDataSet = new QueryDataSet(connection);
		partialDataSet.addTable("_messageid", "SELECT * FROM _messageid where unittestflag=1");
		partialDataSet.addTable("client", "SELECT * FROM client where unittestflag=1");
		partialDataSet.addTable("client_accommodationfamily", "SELECT * FROM client_accommodationfamily where unittestflag=1");
		partialDataSet.addTable("client_accommodations", "SELECT * FROM client_accommodations where unittestflag=1");
		partialDataSet.addTable("client_allowips", "SELECT * FROM client_allowips where unittestflag=1");
		partialDataSet.addTable("client_externs", "SELECT * FROM client_externs where unittestflag=1");
		partialDataSet.addTable("client_fieldtestpriority", "SELECT * FROM client_fieldtestpriority where unittestflag=1");
		partialDataSet.addTable("client_forbiddenappsexcludeschools", "SELECT * FROM client_forbiddenappsexcludeschools where unittestflag=1");
		partialDataSet.addTable("client_forbiddenappslist", "SELECT * FROM client_forbiddenappslist where unittestflag=1");
		partialDataSet.addTable("client_grade", "SELECT * FROM client_grade where unittestflag=1");
		partialDataSet.addTable("client_language", "SELECT * FROM client_language where unittestflag=1");
		partialDataSet.addTable("client_message", "SELECT * FROM client_message where unittestflag=1");
		partialDataSet.addTable("client_messagearchive", "SELECT * FROM client_messagearchive where unittestflag=1");
		partialDataSet.addTable("client_messagetranslation", "SELECT * FROM client_messagetranslation where unittestflag=1");
		partialDataSet.addTable("client_messagetranslationaudit", "SELECT * FROM client_messagetranslationaudit where unittestflag=1");
		partialDataSet.addTable("client_pilotschools", "SELECT * FROM client_pilotschools where unittestflag=1");
		partialDataSet.addTable("client_rtsroles", "SELECT * FROM client_rtsroles where unittestflag=1");
		partialDataSet.addTable("client_segmentproperties", "SELECT * FROM client_segmentproperties where unittestflag=1");
		partialDataSet.addTable("client_server", "SELECT * FROM client_server where unittestflag=1");
		partialDataSet.addTable("client_subject", "SELECT * FROM client_subject where unittestflag=1");
		partialDataSet.addTable("client_systemflags", "SELECT * FROM client_systemflags where unittestflag=1");
		partialDataSet.addTable("client_tds_rtsattribute", "SELECT * FROM client_tds_rtsattribute where unittestflag=1");
		partialDataSet.addTable("client_tds_rtsattributevalues", "SELECT * FROM client_tds_rtsattributevalues where unittestflag=1");
		partialDataSet.addTable("client_test_itemconstraint", "SELECT * FROM client_test_itemconstraint where unittestflag=1");
		partialDataSet.addTable("client_test_itemtypes", "SELECT * FROM client_test_itemtypes where unittestflag=1");
		partialDataSet.addTable("client_testeeattribute", "SELECT * FROM client_testeeattribute where unittestflag=1");
		partialDataSet.addTable("client_testeerelationshipattribute", "SELECT * FROM client_testeerelationshipattribute where unittestflag=1");
		partialDataSet.addTable("client_testeligibility", "SELECT * FROM client_testeligibility where unittestflag=1");
		partialDataSet.addTable("client_testformproperties", "SELECT * FROM client_testformproperties where unittestflag=1");
		partialDataSet.addTable("client_testgrades", "SELECT * FROM client_testgrades where unittestflag=1");
		partialDataSet.addTable("client_testkey", "SELECT * FROM client_testkey where unittestflag=1");
		partialDataSet.addTable("client_testmode", "SELECT * FROM client_testmode where unittestflag=1");
		partialDataSet.addTable("client_testprerequisite", "SELECT * FROM client_testprerequisite where unittestflag=1");
		partialDataSet.addTable("client_testproperties", "SELECT * FROM client_testproperties where unittestflag=1");
		partialDataSet.addTable("client_testrtsspecs", "SELECT * FROM client_testrtsspecs where unittestflag=1");
		partialDataSet.addTable("client_testscorefeatures", "SELECT * FROM client_testscorefeatures where unittestflag=1");
		partialDataSet.addTable("client_testtool", "SELECT * FROM client_testtool where unittestflag=1");
		partialDataSet.addTable("client_testtoolrule", "SELECT * FROM client_testtoolrule where unittestflag=1");
		partialDataSet.addTable("client_testtooltype", "SELECT * FROM client_testtooltype where unittestflag=1");
		partialDataSet.addTable("client_testwindow", "SELECT * FROM client_testwindow where unittestflag=1");
		partialDataSet.addTable("client_timelimits", "SELECT * FROM client_timelimits where unittestflag=1");
		partialDataSet.addTable("client_timewindow", "SELECT * FROM client_timewindow where unittestflag=1");
		partialDataSet.addTable("client_tooldependencies", "SELECT * FROM client_tooldependencies where unittestflag=1");
		partialDataSet.addTable("client_toolusage", "SELECT * FROM client_toolusage where unittestflag=1");
		partialDataSet.addTable("client_voicepack", "SELECT * FROM client_voicepack where unittestflag=1");
		partialDataSet.addTable("geo_clientapplication", "SELECT * FROM geo_clientapplication where unittestflag=1");
		partialDataSet.addTable("geo_database", "SELECT * FROM geo_database where unittestflag=1");
		partialDataSet.addTable("rts_role", "SELECT * FROM rts_role where unittestflag=1");
		partialDataSet.addTable("statuscodes", "SELECT * FROM statuscodes where unittestflag=1");
		partialDataSet.addTable("system_applicationsettings", "SELECT * FROM system_applicationsettings where unittestflag=1");
		partialDataSet.addTable("system_browserwhitelist", "SELECT * FROM system_browserwhitelist where unittestflag=1");
		partialDataSet.addTable("system_networkdiagnostics", "SELECT * FROM system_networkdiagnostics where unittestflag=1");
		partialDataSet.addTable("tds_application", "SELECT * FROM tds_application where unittestflag=1");
		partialDataSet.addTable("tds_applicationsettings", "SELECT * FROM tds_applicationsettings where unittestflag=1");
		partialDataSet.addTable("tds_browserwhitelist", "SELECT * FROM tds_browserwhitelist where unittestflag=1");
		partialDataSet.addTable("tds_clientaccommodationtype", "SELECT * FROM tds_clientaccommodationtype where unittestflag=1");
		partialDataSet.addTable("tds_clientaccommodationvalue", "SELECT * FROM tds_clientaccommodationvalue where unittestflag=1");
		partialDataSet.addTable("tds_configtype", "SELECT * FROM tds_configtype where unittestflag=1");
		partialDataSet.addTable("tds_coremessageobject", "SELECT * FROM tds_coremessageobject where unittestflag=1");
		partialDataSet.addTable("tds_coremessageuser", "SELECT * FROM tds_coremessageuser where unittestflag=1");
		partialDataSet.addTable("tds_fieldtestpriority", "SELECT * FROM tds_fieldtestpriority where unittestflag=1");
		partialDataSet.addTable("tds_role", "SELECT * FROM tds_role where unittestflag=1");
		partialDataSet.addTable("tds_systemflags", "SELECT * FROM tds_systemflags where unittestflag=1");
		partialDataSet.addTable("tds_testeeattribute", "SELECT * FROM tds_testeeattribute where unittestflag=1");
		partialDataSet.addTable("tds_testeerelationshipattribute", "SELECT * FROM tds_testeerelationshipattribute where unittestflag=1");
		partialDataSet.addTable("tds_testproperties", "SELECT * FROM tds_testproperties where unittestflag=1");
		partialDataSet.addTable("tds_testtool", "SELECT * FROM tds_testtool where unittestflag=1");
		partialDataSet.addTable("tds_testtoolrule", "SELECT * FROM tds_testtoolrule where unittestflag=1");
		partialDataSet.addTable("tds_testtooltype", "SELECT * FROM tds_testtooltype where unittestflag=1");
		
		String xmlFile = this.getClass().getResource ("/export/configs/exportedXmlDataSet.xml").getPath ();
		FlatXmlDataSet.write(partialDataSet, new FileOutputStream(xmlFile));
	}
	
	private void exportItembankXml() throws Exception {
		// database connection
		IDatabaseConnection connection = getDBUnitConnection();

		// partial database export
		QueryDataSet partialDataSet = new QueryDataSet(connection);
		partialDataSet.addTable("_dblatency", "SELECT * FROM _dblatency where unittestflag=1");
		partialDataSet.addTable("_sys_formtestitems", "SELECT * FROM _sys_formtestitems where unittestflag=1");
		partialDataSet.addTable("_testupdate", "SELECT * FROM _testupdate where unittestflag=1");
		partialDataSet.addTable("aa_itemcl", "SELECT * FROM aa_itemcl where unittestflag=1");
		partialDataSet.addTable("affinitygroup", "SELECT * FROM affinitygroup where unittestflag=1");
		partialDataSet.addTable("affinitygroupitem", "SELECT * FROM affinitygroupitem where unittestflag=1");
		partialDataSet.addTable("alloweditemprops", "SELECT * FROM alloweditemprops where unittestflag=1");
		partialDataSet.addTable("configsloaded", "SELECT * FROM configsloaded where unittestflag=1");
		partialDataSet.addTable("importitemcohorts", "SELECT * FROM importitemcohorts where unittestflag=1");
		partialDataSet.addTable("importtestcohorts", "SELECT * FROM importtestcohorts where unittestflag=1");
		partialDataSet.addTable("itemmeasurementparameter", "SELECT * FROM itemmeasurementparameter where unittestflag=1");
		partialDataSet.addTable("itemscoredimension", "SELECT * FROM itemscoredimension where unittestflag=1");
		partialDataSet.addTable("loader_accommodations", "SELECT * FROM loader_accommodations where unittestflag=1");
		partialDataSet.addTable("loader_affinitygroups", "SELECT * FROM loader_affinitygroups where unittestflag=1");
		partialDataSet.addTable("loader_affinityitems", "SELECT * FROM loader_affinityitems where unittestflag=1");
		partialDataSet.addTable("loader_contentlevels", "SELECT * FROM loader_contentlevels where unittestflag=1");
		partialDataSet.addTable("loader_errors", "SELECT * FROM loader_errors where unittestflag=1");
		partialDataSet.addTable("loader_formitems", "SELECT * FROM loader_formitems where unittestflag=1");
		partialDataSet.addTable("loader_forms", "SELECT * FROM loader_forms where unittestflag=1");
		partialDataSet.addTable("loader_itembank", "SELECT * FROM loader_itembank where unittestflag=1");
		partialDataSet.addTable("loader_itemclancestors", "SELECT * FROM loader_itemclancestors where unittestflag=1");
		partialDataSet.addTable("loader_itemproperties", "SELECT * FROM loader_itemproperties where unittestflag=1");
		partialDataSet.addTable("loader_items", "SELECT * FROM loader_items where unittestflag=1");
		partialDataSet.addTable("loader_itemscoredimension", "SELECT * FROM loader_itemscoredimension where unittestflag=1");
		partialDataSet.addTable("loader_logicaltests", "SELECT * FROM loader_logicaltests where unittestflag=1");
		partialDataSet.addTable("loader_measurementparameter", "SELECT * FROM loader_measurementparameter where unittestflag=1");
		partialDataSet.addTable("loader_proficiencylevels", "SELECT * FROM loader_proficiencylevels where unittestflag=1");
		partialDataSet.addTable("loader_rulesrelaxvalidation", "SELECT * FROM loader_rulesrelaxvalidation where unittestflag=1");
		partialDataSet.addTable("loader_stimuli", "SELECT * FROM loader_stimuli where unittestflag=1");
		partialDataSet.addTable("loader_stimulusproperties", "SELECT * FROM loader_stimulusproperties where unittestflag=1");
		partialDataSet.addTable("loader_strands", "SELECT * FROM loader_strands where unittestflag=1");
		partialDataSet.addTable("loader_tests", "SELECT * FROM loader_tests where unittestflag=1");
		partialDataSet.addTable("measurementmodel", "SELECT * FROM measurementmodel where unittestflag=1");
		partialDataSet.addTable("measurementparameter", "SELECT * FROM measurementparameter where unittestflag=1");
		partialDataSet.addTable("performancelevels", "SELECT * FROM performancelevels where unittestflag=1");
		partialDataSet.addTable("projects", "SELECT * FROM projects where unittestflag=1");
		partialDataSet.addTable("setoftestgrades", "SELECT * FROM setoftestgrades where unittestflag=1");
		partialDataSet.addTable("tbladminstimulus", "SELECT * FROM tbladminstimulus where unittestflag=1");
		partialDataSet.addTable("tbladminstrand", "SELECT * FROM tbladminstrand where unittestflag=1");
		partialDataSet.addTable("tblalternatetest", "SELECT * FROM tblalternatetest where unittestflag=1");
		partialDataSet.addTable("tblclient", "SELECT * FROM tblclient where unittestflag=1");
		partialDataSet.addTable("tblitem", "SELECT * FROM tblitem where unittestflag=1");
		partialDataSet.addTable("tblitembank", "SELECT * FROM tblitembank where unittestflag=1");
		partialDataSet.addTable("tblitemprops", "SELECT * FROM tblitemprops where unittestflag=1");
		partialDataSet.addTable("tblsetofadminitems", "SELECT * FROM tblsetofadminitems where unittestflag=1");
		partialDataSet.addTable("tblsetofadminsubjects", "SELECT * FROM tblsetofadminsubjects where unittestflag=1");
		partialDataSet.addTable("tblsetofitemstimuli", "SELECT * FROM tblsetofitemstimuli where unittestflag=1");
		partialDataSet.addTable("tblsetofitemstrands", "SELECT * FROM tblsetofitemstrands where unittestflag=1");
		partialDataSet.addTable("tblstimulus", "SELECT * FROM tblstimulus where unittestflag=1");
		partialDataSet.addTable("tblstrand", "SELECT * FROM tblstrand where unittestflag=1");
		partialDataSet.addTable("tblsubject", "SELECT * FROM tblsubject where unittestflag=1");
		partialDataSet.addTable("tbltestadmin", "SELECT * FROM tbltestadmin where unittestflag=1");
		partialDataSet.addTable("testcohort", "SELECT * FROM testcohort where unittestflag=1");
		partialDataSet.addTable("testform", "SELECT * FROM testform where unittestflag=1");
		partialDataSet.addTable("testformitem", "SELECT * FROM testformitem where unittestflag=1");
		
		String xmlFile = this.getClass().getResource ("/export/itembank/exportedXmlDataSet.xml").getPath ();
		FlatXmlDataSet.write(partialDataSet, new FileOutputStream(xmlFile));
	}
}
